// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using triviaquiz.api.Data;

namespace triviaquiz.api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20181127070446_Add_GameMode")]
    partial class Add_GameMode
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("triviaquiz.api.Models.Category", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("LobbyId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("LobbyId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("triviaquiz.api.Models.GameMode", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("GameModes");

                    b.HasData(
                        new { Id = "56f2133e-d59d-4871-832f-f4f86835d6df", Name = "Drinking Game" },
                        new { Id = "ae3476ce-d55f-42e9-bdbf-564ab27e0338", Name = "Classic" }
                    );
                });

            modelBuilder.Entity("triviaquiz.api.Models.Lobby", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("GameCode");

                    b.Property<string>("GameModeId");

                    b.Property<int>("State");

                    b.HasKey("Id");

                    b.HasIndex("GameModeId");

                    b.ToTable("Lobbies");
                });

            modelBuilder.Entity("triviaquiz.api.Models.Player", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConnectionId");

                    b.Property<bool>("IsHost");

                    b.Property<string>("LobbyId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("LobbyId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("triviaquiz.api.Models.Question", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CategoryId");

                    b.Property<string>("CorrectAnswer");

                    b.Property<int>("Difficulty");

                    b.Property<string>("IncorrectAnswersCollection");

                    b.Property<int>("Type");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Question");
                });

            modelBuilder.Entity("triviaquiz.api.Models.Category", b =>
                {
                    b.HasOne("triviaquiz.api.Models.Lobby")
                        .WithMany("Categories")
                        .HasForeignKey("LobbyId");
                });

            modelBuilder.Entity("triviaquiz.api.Models.Lobby", b =>
                {
                    b.HasOne("triviaquiz.api.Models.GameMode", "GameMode")
                        .WithMany()
                        .HasForeignKey("GameModeId");
                });

            modelBuilder.Entity("triviaquiz.api.Models.Player", b =>
                {
                    b.HasOne("triviaquiz.api.Models.Lobby")
                        .WithMany("Players")
                        .HasForeignKey("LobbyId");
                });

            modelBuilder.Entity("triviaquiz.api.Models.Question", b =>
                {
                    b.HasOne("triviaquiz.api.Models.Category")
                        .WithMany("Questions")
                        .HasForeignKey("CategoryId");
                });
#pragma warning restore 612, 618
        }
    }
}
